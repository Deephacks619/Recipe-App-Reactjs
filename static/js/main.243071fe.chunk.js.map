{"version":3,"sources":["Components/Recipe.js","Components/Navbar.js","App.js","Components/Recipedetails.js","Components/Router.js","serviceWorker.js","index.js","Components/recipe.module.css"],"names":["Recipe","props","className","style","recipe","image","src","alt","color","fontFamily","textTransform","title","fontWeight","source","to","pathname","state","data","viewrecipe","Navbar","navbar","logo","App","useState","recipes","setrecipes","search","setsearch","query","setquery","useEffect","getlinkapi","a","fetch","response","json","hits","onSubmit","e","preventDefault","alert","placeholder","type","value","onChange","target","map","key","label","ingredients","position","top","backgroundColor","textAlign","padding","Recipedetails","componentDidMount","location","res","dat","setState","console","log","this","width","height","marginTop","fontSize","healthLabels","textDecoration","border","marginLeft","href","url","Component","Router","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"4UA0BeA,EAvBA,SAACC,GACZ,OACI,yBAAKC,UAAWC,IAAMC,QACrB,yBAAKF,UAAWC,IAAME,MAAOC,IAAKL,EAAMI,MAAOE,IAAI,WAChD,wBAAIJ,MAAO,CAACK,MAAM,MAAMC,WAAW,GAAGC,cAAc,cAAeT,EAAMU,OAEzE,uBAAGR,MAAO,CAACS,WAAW,OAAOH,WAAW,KAAxC,WACSR,EAAMY,QAEf,kBAAC,IAAD,CAAMC,GAAI,CAAEC,SAAS,WAAD,OAAYd,EAAMU,OACtCK,MAAM,CAACZ,OAAOH,EAAMgB,QAEpB,4BAAQf,UAAWC,IAAMe,YAAzB,kBCCGC,EAbA,WACX,OACI,yBAAKjB,UAAWC,IAAMiB,QAClB,wBAAIlB,UAAWC,IAAMkB,MAArB,MACA,wBAAInB,UAAU,iBACd,kBAAC,IAAD,CAAMY,GAAG,KAAT,oBCuDGQ,EA1DJ,WAET,IAFc,EAIaC,mBAAS,IAJtB,mBAIPC,EAJO,KAICC,EAJD,OAKaF,mBAAS,IALtB,mBAKPG,EALO,KAKAC,EALA,OAMWJ,mBAAS,WANpB,mBAMPK,EANO,KAMDC,EANC,KAQdC,qBAAU,WACRC,MACA,CAACH,IACH,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACKC,MAAM,mCAAD,OAAoCL,EAApC,mBAVhB,WAUgB,oBATf,qCAQK,cACXM,EADW,gBAECA,EAASC,OAFV,OAEXlB,EAFW,OAGjBQ,EAAWR,EAAKmB,MAHC,2CAAH,qDAkBhB,OACE,yBAAKlC,UAAU,OACf,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACb,0BAAMA,UAAU,cAAcmC,SAdb,SAACC,GACpBA,EAAEC,iBACU,KAATb,EACHG,EAASH,GAGPc,MAAM,0CAERb,EAAU,MAON,2BAAOzB,UAAU,aAAauC,YAAY,yBAAyBC,KAAK,OAAOC,MAAOjB,EAAQkB,SAlBhF,SAACN,GACnBX,EAAUW,EAAEO,OAAOF,UAkBf,4BAAQzC,UAAU,gBAAgBwC,KAAK,WAAvC,WAIF,yBAAKxC,UAAU,WACdsB,EAAQsB,KAAI,SAAA1C,GAAM,OAElB,kBAAC,EAAD,CAAQ2C,IAAK3C,EAAOA,OAAO4C,MACnB/B,KAAMb,EAAOA,OACdO,MAAOP,EAAOA,OAAO4C,MACrBnC,OAAQT,EAAOA,OAAOS,OACtBR,MAAOD,EAAOA,OAAOC,MACrB4C,YAAa7C,EAAOA,OAAO6C,mBAKrC,4BAAQ9C,MAAO,CAAC+C,SAAS,WAAWC,IAAI,QAAQC,gBAAgB,UAAU5C,MAAM,QAAQ6C,UAAW,SAASC,QAAQ,QAApH,6B,gCCIWC,G,kNAlDXvC,MAAM,CACFE,WAAY,I,EAEhBsC,kB,sBAAmB,gCAAAxB,EAAA,6DACTrB,EAAQ,EAAKV,MAAMwD,SAASzC,MAAMZ,OAAO4C,MADhC,SAEMf,MAAM,mCAAD,OAAoCtB,EAApC,mBARrB,WAQqB,oBAPpB,qCAKS,cAEL+C,EAFK,gBAGMA,EAAIvB,OAHV,OAGLwB,EAHK,OAIX,EAAKC,SAAS,CACV1C,WAAWyC,EAAIvB,KAAK,GAAGhC,SAE3ByD,QAAQC,IAAI,EAAK9C,MAAME,YAPZ,2C,uDAST,IACAA,EAAc6C,KAAK/C,MAAnBE,WACN,OACI,6BACA,yBAAKhB,UAAU,SACX,kBAAC,EAAD,MACJ,yBAAKA,UAAU,QAGX,yBAAKA,UAAU,cACX,yBAAKC,MAAO,CAAC6D,MAAM,MAAMC,OAAO,OAAOZ,UAAW,QAAS/C,IAAMY,EAAWb,MAAQE,IAAI,gBAE5F,4BAAKW,EAAW8B,OAChB,yBAAK9C,UAAU,kBAAkBC,MAAO,CAAC+D,UAAU,SAC/C,0BAAM/D,MAAO,CAACgE,SAAS,OAAOvD,WAAW,SAAzC,oBACA,0BAAMT,MAAO,CAACgE,SAAS,OAAOvD,WAAW,SAAUM,EAAWkD,eAElE,yBAAKlE,UAAU,SAASC,MAAO,CAAC+D,UAAU,SAC1C,0BAAM/D,MAAO,CAACgE,SAAS,OAAOvD,WAAW,SAAzC,WACI,0BAAMT,MAAO,CAACgE,SAAS,OAAOvD,WAAW,SAAUM,EAAWL,SAElE,yBAAKV,MAAO,CAAC+D,UAAU,SACnB,0BAAM/D,MAAO,CAACgE,SAAS,OAAOvD,WAAW,SAAzC,mCACA,8BAAM,uBAAGT,MAAO,CAACkE,eAAe,OAAO7D,MAAM,UAAU8D,OAAO,gBAAgBlB,gBAAgB,QAAQmB,WAAY,MAAMjB,QAAQ,OAAQkB,KAAMtD,EAAWuD,KAAnJ,iBAEV,kBAAC,IAAD,CAAM3D,GAAG,KACL,4BAAQX,MAAO,CAAC+D,UAAU,QAAShE,UAAWC,IAAMe,YAApD,cAOR,4BAAQf,MAAO,CAAC+C,SAAS,WAAWC,IAAI,QAAQC,gBAAgB,UAAU5C,MAAM,QAAQ6C,UAAW,SAASC,QAAQ,QAApH,gC,GA9CgBoB,cCMbC,EAXA,WACX,OACI,kBAAC,IAAD,KACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxD,IACjC,kBAAC,IAAD,CAAQuD,KAAK,kBAAkBC,UAAWvB,OCElCwB,QACW,cAA7BC,OAAOvB,SAASwB,UAEe,UAA7BD,OAAOvB,SAASwB,UAEhBD,OAAOvB,SAASwB,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLlC,QAAQkC,MAAMA,EAAMC,a,kBExI5BC,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,uBAAuB,KAAO,qBAAqB,MAAQ,sBAAsB,WAAa,8B","file":"static/js/main.243071fe.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './recipe.module.css';\r\nimport {Link} from 'react-router-dom'\r\nconst Recipe = (props) => {\r\n    return (\r\n        <div className={style.recipe}>\r\n         <img className={style.image} src={props.image} alt=\"images\"/>\r\n            <h2 style={{color:\"red\",fontFamily:\"\",textTransform:\"uppercase\"}}>{props.title}</h2>\r\n            \r\n            <p style={{fontWeight:\"bold\",fontFamily:\"\"}}>\r\n            SOURCE: {props.source}\r\n            </p>\r\n            <Link to={{ pathname:`/recipe/${props.title}`,\r\n            state:{recipe:props.data}\r\n            }}>\r\n            <button className={style.viewrecipe}>\r\n            VIEW RECIPE\r\n            </button>\r\n            \r\n            </Link>\r\n            \r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Recipe;","import React from 'react';\r\nimport style from './recipe.module.css'\r\nimport {Link} from 'react-router-dom'\r\nconst Navbar = () => {\r\n    return (\r\n        <div className={style.navbar}>\r\n            <h1 className={style.logo}>DK</h1>\r\n            <h1 className=\"style.caption\">\r\n            <Link to=\"/\">\r\n                 Recipe Search\r\n            </Link>\r\n            </h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React,{useState, useEffect} from 'react';\nimport './App.css';\nimport Recipe from './Components/Recipe'\nimport Navbar from './Components/Navbar'\n\nconst App =()=> {\n\n  const APP_ID=\"195e1682\";\n  const APP_KEY=\"bf948e48985a336d93d01b7fca37096a\";\n  const [recipes,setrecipes]=useState([])\n  const [search,setsearch] = useState(\"\")\n  const [query,setquery] = useState('chicken')\n\n  useEffect(()=>{\n    getlinkapi();\n  },[query]);\n  const getlinkapi = async()=> {\n    const response =await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`)\n    const data =await response.json();\n    setrecipes(data.hits)\n  }\n  const handleinput = (e)=>{\n    setsearch(e.target.value)\n  }\n  const searchrecipe = (e)=>{\n    e.preventDefault()\n    if(search!==\"\"){\n    setquery(search)\n    }\n    else{\n      alert(\"Please Enter Some Recipe in Search Bar\")\n    }\n    setsearch(\"\")\n  }\n  return (\n    <div className=\"App\">\n    <Navbar/>\n    <div className=\"body-part\">\n      <form className=\"search-form\" onSubmit={searchrecipe}>\n        <input className=\"input-text\" placeholder=\"Search Recipes here...\" type=\"text\" value={search} onChange={handleinput}></input>\n        <button className=\"search-button\" type=\"submmit\" >\n          Search\n        </button>\n      </form>\n      <div className=\"recipes\">\n      {recipes.map(recipe =>\n      \n      (<Recipe key={recipe.recipe.label}\n               data={recipe.recipe}\n              title={recipe.recipe.label}\n              source={recipe.recipe.source}\n              image={recipe.recipe.image}\n              ingredients={recipe.recipe.ingredients}\n       />)\n      )}\n      </div>\n    </div>\n    <footer style={{position:\"relative\",top:\"100px\",backgroundColor:\"#192A56\",color:\"white\",textAlign: \"center\",padding:\"5px\"}}>Made by @Deepak Kyatham</footer>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\n//import Details1 from './DetailsRecipe/Details1';\r\n//import Details2 from './DetailsRecipe/Details2'\r\nimport Navbar from './Navbar'\r\nimport './Recipedetails.css';\r\nimport style from './recipe.module.css';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst APP_ID=\"195e1682\";\r\nconst APP_KEY=\"bf948e48985a336d93d01b7fca37096a\";\r\nclass Recipedetails extends Component {\r\n    state={\r\n        viewrecipe: []\r\n    }\r\n    componentDidMount= async()=>{\r\n        const title = this.props.location.state.recipe.label;\r\n            const res =await fetch(`https://api.edamam.com/search?q=${title}&app_id=${APP_ID}&app_key=${APP_KEY}`)\r\n            const dat =await res.json();\r\n            this.setState({\r\n                viewrecipe:dat.hits[0].recipe\r\n            })\r\n            console.log(this.state.viewrecipe)\r\n    }\r\n    render() {  \r\n       const {viewrecipe} = this.state\r\n        return (\r\n            <div>\r\n            <div className=\"total\">\r\n                <Navbar/>\r\n            <div className=\"cont\">\r\n            \r\n            \r\n                <div className=\"recipe-img\">\r\n                    <img style={{width:\"30%\",height:\"auto\",textAlign: \"left\"}} src={ viewrecipe.image } alt=\"recipe-img\"></img>\r\n                </div>\r\n                <h1>{viewrecipe.label}</h1>\r\n                <div className=\"health-benefits\" style={{marginTop:\"10px\"}}>\r\n                    <span style={{fontSize:\"20px\",fontWeight:\"bold\"}}>Health Benifits:</span>\r\n                    <span style={{fontSize:\"17px\",fontWeight:\"bold\"}}>{viewrecipe.healthLabels}</span>\r\n                </div>\r\n                <div className=\"making\" style={{marginTop:\"10px\"}}>\r\n                <span style={{fontSize:\"20px\",fontWeight:\"bold\"}}>Source:</span>\r\n                    <span style={{fontSize:\"17px\",fontWeight:\"bold\"}}>{viewrecipe.source}</span>\r\n                </div>\r\n                <div style={{marginTop:\"10px\"}}>\r\n                    <span style={{fontSize:\"17px\",fontWeight:\"bold\"}}>Wanna Check Out some more Info:</span>\r\n                    <span><a style={{textDecoration:\"none\",color:\"#192A56\",border:\"2px solid red\",backgroundColor:\"white\",marginLeft: \"5px\",padding:\"3px\"}} href={viewrecipe.url}> Click Here</a></span>\r\n                </div>\r\n                <Link to=\"/\">\r\n                    <button style={{marginTop:\"20px\"}} className={style.viewrecipe}>\r\n                    GO HOME\r\n                    </button>\r\n                </Link>\r\n                </div>\r\n                \r\n            </div>\r\n            <footer style={{position:\"relative\",top:\"100px\",backgroundColor:\"#192A56\",color:\"white\",textAlign: \"center\",padding:\"5px\"}}>Made by @Deepak Kyatham</footer>\r\n            </div>\r\n        );\r\n}}\r\n\r\nexport default Recipedetails;","import React from 'react';\r\nimport {BrowserRouter,Route,Switch} from \"react-router-dom\";\r\nimport App from '../App'\r\nimport Recipedetails from './Recipedetails'\r\n \r\nconst Router = () => {\r\n    return (\r\n        <BrowserRouter>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={App}></Route>\r\n            <Route  path=\"/recipe/:label/\" component={Recipedetails}></Route>\r\n        </Switch>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default Router;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router from './Components/Router';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__AkObk\",\"navbar\":\"recipe_navbar__3p8iG\",\"logo\":\"recipe_logo__2HxDW\",\"image\":\"recipe_image__2iCTW\",\"viewrecipe\":\"recipe_viewrecipe__3duUZ\"};"],"sourceRoot":""}